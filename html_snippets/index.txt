<!-- START_OF index.txt -->

<h1>Introduction</h1>

<p>
Ben-Jose is:

<ol>
<li>
A sotware library.
<li>
A <a href="https://en.wikipedia.org/wiki/Boolean_satisfiability_problem" target="blank">
SAT problem</a> solver.
<li>
Free Software and Open Source Software.
<li>
Trainable.
</ol>

<p>
The library is designed to be used as a support library for applications or libraries that need to solve SAT instances. The expected user is a C/C++ programmer. 

<p>
The initial motivation for this software was to do better than existant solvers for
Pigeon Hole Principle (PHP) instances of the SAT problem, and still be competitive for other instances.

<h1>Status</h1>

<p>
Ben-Jose is been reimplemented from scratch. It's algorithm has been redesigned to be highly parallel while preserving the proposed trainable <a href="https://ben-jose.github.io/ben-jose.pdf">
strategy</a>. An asynchronous messaging library <a href="https://messaging-cells.github.io/">Messaging Cells</a> was developed in order to implement the new algorithm. It is research work in progress. 

<p>
Current ben-jose never left pre-alpha stage. It's current state is just a proof of concept tool for the <a href="https://ben-jose.github.io/ben-jose.pdf">proposed</a> general strategy to solve SAT problems. It is the result of more than ten years of research in SAT solving.


<h1>Download and Install</h1>

<ol>
	<li>
	Download and unzip a ZIP file of ben-jose from 
	<a href="https://github.com/ben-jose/ben-jose">
		https://github.com/ben-jose/ben-jose
	</a>

	<li>
	In the command line:
	<pre>
	  cd ben-jose-master/build/gnu_make
	  make 
	  cd lib/ben-jose
	  echo $'\nPATH=$PATH:'`pwd`$'\n' >> ~/.bashrc
	  ls
	  exit
	</pre>
</ol>

<p>
These commands will compile, built, put the library directory in the PATH environment variable, list all files of the library and finally 'exit' the command line so the changes to the path take effect (.bashrc is ran again) the next time you open a command line.

<h3>Required Software</h3>
<ol>
	<li>A Linux system.
	<li>GNU C++ (g++). 
	<li>GNU Make (Make). 
	<li>GMP Library for c++ development installed. Packages 'libgmp' (library), 'libgmp-dev' (development) and 'libgmpxx' (c++ bindings).
</ol>

<p>
For Mint and in the command line (probably the same for other debian based distros):

<pre>
	sudo apt-get install gcc
	sudo apt-get install g++
	sudo apt-get install make
	sudo apt-get install libgmp10
	sudo apt-get install libgmp-dev
	sudo apt-get install libgmpxx4ldbl
</pre>

<p>
These commands are safe to be run even if the packages are already installed because it will just tell you so.

<h1 id="Getting-Started">Getting Started</h1>

<p>
Look at:

<ol>
<li>The <a href="hello_world.html">bj-hello-world</a> program.

<li>The <a href="bj-phi.html">bj-phi</a> program.

<li>The 
<a href="https://ben-jose.github.io/ben-jose.pdf">
.pdf</a> file of 
<a href="https://github.com/ben-jose/ben-jose/tree/master/doc">
Ben-Jose</a> 's
<a href="https://ben-jose.github.io/ben-jose.pdf">
Tool Paper</a>.
</ol>



<br>
<br>
<br>
