<!-- START_OF index.txt -->

<H1> bj-phi </h1>

<p>
Tha bj-phi program that comes with the library generates HTML pages with 
<a href="http://js.cytoscape.org/">cytoscape.js</a> graphs to visualize the solving of 
<a href="https://en.wikipedia.org/wiki/Pigeonhole_principle">Pigeon Hole Principle (Pigeonhole or PHP)</a> instances. 

<p>
This example shows that the ben-jose SAT solver can be trained and that it generates short proofs for Pigeon Hole Principle instances.

<p>
Assuming the program ''bj-phi'' is in the path, and from the source tree directory, do:

<pre>
	cd ben-jose/src/programs/tests/phi
	sh clean_sh
	bj-phi 4
	firefox ./phi_hole_4/phi_hole_4_all_steps.htm &
</pre>

<p>
will execute the bj-phi program for PHP-4 and it will use the file 

<pre>
	./dbg_ben_jose.conf
</pre>

<p>
to configure the debugging system to generate an HTML log file of the the solving process for PHP-4. 
<a href="phi_hole_4/phi_hole_4_all_steps.htm">In this link</a> you can find the output of the first run. To understand the output relate to the <a href="https://github.com/ben-jose/ben-jose">code in github</a>, 
it's <a href="doxy_generated_doc/html/index.html">documentation</a>, 
and to the <a href="ben-jose.pdf">paper</a> explaining the proposed trainable strategy to SAT solving.

<div class="alert alert-warning" role="alert">
The second run generates different HTML because it does only <strong>one</strong> backtrack. Tha means that the solver uses previous results or training to solve any future instance in less number of steps (even shorter proofs based on previous proofs).
</div>

<p>
In order to restart the original state before the first run: that is to delete the {\skeleton} and the generated files by bj-phi simply run:

<pre>
	sh ./clean_sh
</pre>

<br>
<br>
<br>
